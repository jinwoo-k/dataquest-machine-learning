= Understanding Linear And Nonlinear Functions
Learn the basics of slope to understand mathematical functions.

== 1. Why Learn Calculus?
* 이전 코스에서 다룬 KNN은 어떤 방식으로 동작하는지 이해하기 위해서 수학을 필요로하지 않았다.
* KNN은 이해하기 쉽지만 모델 자체가 전체 트레이닝 세트를 사용하여 표현되기 때문에 더 큰 데이터 세트에는 사용할 수 없습니다. -> 계산 집약적 기술을 의미함
* 앞으로 우리가 배우게 될 대부분의 기계 학습 기술에 대해 모델은 수학 함수로 표현된다.
** 이 수학 함수는 피쳐들이 타겟 속성과 어떻게 관련되어 있는지를 설명하는 기본 함수를 근사화한다.
** 훈련 데이터 세트를 사용하여이 수학 함수를 유도하고 해당 함수를 이용해 테스트 데이터 세트(또는 미래의 데이터 세트)에 대한 예측을 계산하는 것으로 비용이 적게 든다.
** 다음 다이어그램에서는 데이터 집합을 근사하는 두 가지 선형 회귀 함수를 보여줍니다 (이 데이터 집합의 값은 임의 임).

* 기계 학습을위한 선형 회귀 모델을 사용하기 전에 미적분의 핵심 아이디어를 이해해야 한다. 미적분은 수학 함수가 어떻게 작동하는지 이해할 수있는 프레임 워크를 제공한다.
1. 다양한 지점에서의 기울기를 이해
2. 함수에서의 극한점을 찾음
3. 데이터셋을 가장 잘 나타내는 최적의 함수를 결정

* 방정식 y = - (x^2) + 3x - 1 에서 y값이 최대가 되는 x를 찾고, 시각화 하는 예제 수행
[source,python]
----
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 3, 301)
y = -(x ** 2) + 3 * x - 1
plt.plot(x, y)
----

== 2. Linear Function
* 곡선을 직선(선형 함수)로 분석하는 방법을 배운다.
* y = mx + b 함수에서 m, b는 상수고 y, x 는 변수다.
** 이해할 수 없음.... 도대체 m, b 모두 기울기에 영향을 미치는 것인가..?

== 3. Slope And Y-Intercept
* y = mx + b 함수에서 m은 기울기를, b는 y절편을 의미한다.
* 기울기에 대한 다른 표현은 변경의 변화율이다.

== 4. Math Behind Slope
* 직선상에서 모든 점간의 변화율은 직선의 기울기와 같음을 예제를 통해 살펴본다.

== 5. Nonlinear Function
* 스탭1에서 봤던 방정식 y = −(x^2) + 3x − 1 은 비선형 함수로 y = mx + b 꼴이 아니다.

== 6. Secant Lines
* 비선형 방정식에서 두 점의 기울기는 항상 달라진다. 이에 두 점의 기울기로부터 함수를 유추하는건 불가능하다.

== 7. Secant Lines And Slope
* 두 x(x1과 x2)의 차이가 작을수록, 선의 기울기는 곡선의 해당 점에서의 기울기에 더 가까워진다.

== 8. Tangent Line
* 두 점의 x1, x2가 같아지면 분모가 0이 되어 기울기가 정의되지 않는다.
* 하지만 x1과 x2를 가까이 할수록 기울기는 3에 가까워진다.
* 순간 변화율
** 선형 함수는 기울기와 순간 변화율이 동일함.
** 비선형 함수는 특정 점에서 비선형 함수에 수직 인 선의 기울기를 나타낸다. (접선)
* 다음 미션에서 접선을 직접 계산하는 방법을 배운다.
