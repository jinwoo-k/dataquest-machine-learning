= Solution Sets

== 1. Introduction
* 우리는 b가 모든 0을 포함하는 벡터가 아닐때 Ax=b에 대한 해를 찾기 위해 두가지 방법을 모색함
** 가우시안 소거법
** 역행렬 곱셈

== 2. inconsistent Systems
* 모든 방정식이 해를 갖는것은 아니다.
* 일치하지 않는 시스템은 값이 겹치지 않는 두개 이상의 방정식을 가지므로 해를 구할수 없다.

image::./images/4/2-1.PNG[]
image::./images/4/2-2.PNG[]
image::./images/4/2-3.PNG[]

* 위 방정식에 대한 결과 그래프

image::./images/4/2-4.PNG[결과]


== 3. Sungular Matrix
* 두 라인이 평행하고 교차하지 않기 때문에 해가 없다.
* 정사각형 행렬에 대해 해가 없는 방정식을 처리하는 방법에 대해 논의
* 행렬의 역행렬과 행렬의 행렬식이 0이 아닐때만 역행렬이 존재
* 정사각형 행렬로 작업할때 행렬의 수와 열이 같으면 행렬식을 계산할 수 있고 0과 같으면 행렬이 단수이거나 역수가 포함되지 않음

image::./images/4/3-1.PNG[]
image::./images/4/3-2.PNG[]
image::./images/4/3-3.PNG[]

== 4. Possible Solution For Nonhomogenous Systems
* 지금까지 상수벡터 (B->)가 모두 0을 포함하지 않는 선형시스템을 살펴보았음
* 이러한 선형 시스템을 비균질 시스템이라고 함

image::./images/4/4-1.PNG[]

* 상수 벡터가 제로 벡터와 같을 때 그 시스템은 동질 시스템이라고 한다

image::./images/4/4-2.PNG[]

* 이 균등 시스템은 항상 해의 제로벡터를 가지고 있기 때문에 구별이 존재
* 사각, 정사각 비균질 시스템의 경우 세가지 해결책이 있음
** 해가 없음
** 단일 해
** 무한히 많은 해

image::./images/4/4-3.PNG[]

* 사각, 정사각이 아닌 시스템의 경우 솔루션은 두가지
** 해가 없음
** 무한히 많은 해
* 고차원의 예

image::./images/4/4-4.PNG[]

* R2 - R1

image::./images/4/4-5.PNG[]

* R2 / 2

image::./images/4/4-6.PNG[]

* 위 내용을 방정식으로 표현

image::./images/4/4-7.PNG[]
image::./images/4/4-8.PNG[]


== 5. Homogenous Systems
* Homogenous Systems (균질 시스템)에서는 무한의 해인지 아닌지 존재에 여부가 궁금함

image::./images/4/5-1.PNG[]

* 행렬을 사다리꼴 형식으로 줄이면 아래와 같다.

image::./images/4/5-2.PNG[]

* 흥미롭게 마지막 행은 방정식이 0 = 0이다.
* 마지막 행에 0 = 3같은 사실이 없는 방정식이 포함된 경우 해가 없다.

image::./images/4/5-3.PNG[]

* 방정식으로 표현해보자

image::./images/4/5-4.PNG[]

* 무한한 해를 갖는 방정식으로 표현

image::./images/4/5-5.PNG[]

== 6. Summary of Linear Systems
* 직사각형 행렬일 경우 가우시안 소거법을 사용해 무한히 많은 해가 있는지 확인한다.
* 정사각형인 경우 매개변수 벡터 형식으로 해를 구함
* 직사각형이고 비균질적이면 무한히 해를 가질 것이다.
* 균질일때는 항상 제로벡터를 포함한다.
* 해가 있는지 알아보려면 가우시안 소거법을 사용해 일치하지 않는 방정식이 있는지 확인해야한다.


== 예제모음

=== 1.

[source,python]
----
def test_homog(x3):
    x1 = float(4/3*x3)
    x2 = 0
    return((3*x1 + 5*x2 - 4*x3 == 0) and (x2 == 0))

b_one = test_homog(1)
b_two = test_homog(-10)
----
