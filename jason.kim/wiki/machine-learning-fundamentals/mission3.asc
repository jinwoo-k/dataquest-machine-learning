= Multivariate K-Nearest Neighbors

Improve your predictions by using more features.

== 개요
* 정확도를 향상시키기 위한 트윅 두가지
1. model 을 위한 속성을 증가
2. 인접 이웃의 k 값을 증가

* 이번 미션에서는 속성을 증가시키는 것에 집중한다. 이는 방정식에 잘 맞지 않는 열에 주의해야한다.

* 방정식에 맞지 않는 속성
1. 비수치(유클리드 거리 방정식 사용 불가)
2. 누락된 데이터
3. 순서가 없는 값(좌표값 등)

== Removing features
* 비수치, 순서가 없는 값 제거

== Handling Missing Values
* 누락된 값이 있는 행 제거

== Normalize Columns
* 단일 열이 거리에 너무 많은 영향을 미치지 않도록 모든 열의 평균을 0으로 표준 편차를 1로 정규화 할 수 있다.
* 정규화 방법
1. 모든 값에서 해당 행의 평균값을 뺀다.
2. 모든 값을 각 행의 표준편차로 나눈다.

== Euclidean Distance For Multivariate Case
* 여러개의 속성을 이용한 유클리드 거리 이용

== Introduction To Scikit-Learn
* 사이킷 런 라이브러리를 이용한 KNN 알고리즘을 살펴본다.
* Scikit-learn은 주요 기계 학습 알고리즘과 단순하고 통합 된 워크 플로우를 위한 기능을 포함한다.
* 사이킷 런은 네가지 워크플로를 포함한다
1. 사용하기 원하는 머신러닝 모델을 인스턴스화 한다.
2. 모델을 학습데이터에 fitting 한다.
3. 모델을 예측에 사용한다.
4. 예측의 정확도를 평가한다.
* 수치형 데이터를 다루는 모델은 regression 모델이라 하고, 비수치형 모델은 classification이라 한다.

== Fitting A Model And Making Predictions
* 사이킷 런의 KNeighborsRegressor 를 이용한 모델 피팅 및 예측 수행

== Calculating MSE Using Scikit-Learn
* 사이킷 런에 포함된 mean_sqaured_error 메서드를 통해 쉽게 mse / rmse 를 구할 수 있다.

== Using More Features
* 기존에는 두가지 피쳐(accommodates, bedrooms)를 이용해 예측했지만 이번에는 네가지 피쳐(accommodates, bedrooms, bathrooms, number_of_reviews)를 이용해 구해본다.

== Using All Features
* 모든 피쳐를 이용해 뽑아본다 --> 잘 했다고 생각하는데 자꾸 틀렸다고 나온다.. 왜그럴까?

== Next Steps
* 모델에서 사용할 피쳐를 선택하는 과정을 피쳐 선택이라고 한다.
* 피쳐 선택에 따라 성능이 좌우될 수있다.
