= The Linear Regression Model

== 1. Instance Based Learning Vs. Model Based Learning

* KNN 알고리즘 : 테스트 셋의 각 인스턴스에 대해 트레이닝 셋에서 비슷한 예제를 찾아 예측
** 예측시마다 이전사례 전부를 다시 학습
** 속성과 대상 열 간의 관계는 상관없음
** 예를들어 데이터 셋에 백만개의 인스턴스가 있고 10만개의 새로운 인스턴스에 대해 예측하고 싶다면 각 인스턴스에 대해 유클리드 거리로 트레이닝셋의 백만 인스턴스를 분류 해야한다.

image::./images/1.PNG[KNN]

* 선형 회귀 및 로지스틱 회귀와 같은 매개변수 시스템 학습 접근법
** KNN과 달리 학습 과정의 결과는 학습 집합 패턴을 가장 근사하게 만드는 수학적 함수 => 모델
** 속성과 대상 열 간의 관계에 대한 가정을 통해 동작
** 속성과 대상 열 간의 근사관계는 선형 회귀 방정식으로 표현할 수 있다.

image::./images/1-1.PNG[선형회귀방정식]

* KNN과 비모수적인 접근법과 비교하고 대조하기 위함
* 트레이닝 셋에서 최대한의 모델을 찾아냄 n^2 이걸로 테스트 셋에서 계산을 쉽게해서 예측

image::./images/1-2.PNG[선형회귀방정식]

* 모델 교육과정에 scikit-learn을 사용할 예정

== 2. Introdution To The Data

* 이번 스탭에서는 아이오와주 에임스의 주택판매 데이터셋을 이용한다
* 데이터 셋의 각 행은 단일 주택의 특성과 판매된 금액
** 어떤집의 속성이 최종 판매가에 가장 큰 영향을 줍니까?
** 우리는 그 속성으로부터 판매가격을 얼마나 효과적으로 예측이 가능합니까?

== 3. Simple Linear Regression
* 단순 선형 회귀라고 알려진 선형 회귀의 단변량을 이해

image::./images/1-3.PNG[선형회귀]

* x1은 속성열
* a0, a1은 데이터 집합의 고유한 매개변수값
* 단순 선형회귀의 목표 : 속성 열과 대상 열간의 관계를 가장 잘 설명하는 최적의 매개변수 값을 찾는것
* 단순선형회귀 그래프

image::./images/1-4.PNG[선형회귀]

* 먼저 x1에 해당하는 속성을 선택해야한다.
* 그다음 scikit-learn을 사용해 트레이닝 셋을 기반으로 최적의 매개변수값 a1 및 a0를 결정할 수 있다.
* 선형회귀 가정 중 하나는 피처와 대상 열 사이의 관계가 선형이기에 최종 판매 가격과 가장 밀접한 상관관계가 있는 것처럼 보이는 속성을 선택하는 것이다.

image::./images/1-5.PNG[선형회귀]

== 4. Least Squares
* Gr Liv Area(집의 크기) 속성이 가격과 가장 관련이 있음을 알 수 있다.
* pandas.DataFrame.corr() 메소드를 사용해서 이런 열 쌍 간의 상관관계를 계산하여 확인할 수 있다.
* `train[['Garage Area', 'Gr Liv Area', 'Overall Cond', 'SalePrice']].corr()`

image::./images/1-6.PNG[선형회귀]

* 참고
** http://math7.tistory.com/112[상관계수란?]
** http://math7.tistory.com/113[상관계수 구하는법]

* 식을 변경할 수 있다.

image::./images/1-7.PNG[선형회귀]

* 선형회귀모델에서 최적의 매개변수를 찾기 위해서는 residual sum of squares (잔차 제곱합) (OR RSS)를 최적화 해야함
* 잔차는 실제값과 예측값의 차이를 뜻한다.

image::./images/1-8.PNG[잔차]

* 우리는 RSS(잔차제곱합)가 가능한 작길 원한다.

image::./images/1-9.PNG[잔차]
image::./images/1-10.PNG[잔차식2]

* 잔차 계산식이 MSE 구하는 공식과 흡사하다.

image::./images/1-11.PNG[MSE]

* 테스트 셋에서 MSE를 사용하는 동안 훈련이 좋은 값일 때 훈련셋에서 RSS를 최소화 하고자 한다.


== 5. Using Scikit-Learn To Train And Predict
* scikit-learn을 통해 최적의 매개변수 값을 찾는다.

== 6. Making Predictions
* 전 스탭에서 구한 모델을 이용해 테스트 셋을 예측하고 RMSE를 구함

[width="80%", options="header"]
|=======
| RMSE
|56034.3620014
|57088.2516126
|=======


== 7. Multiple Linear Regression
* 간단한 선형회귀 기본을 살펴보았다. 이 내용으로 다변수 케이스(다중선형회귀)까지 확장할 수 있다.
* 다중선형회귀 모델을 이용하면 여러 속성 열과 대상열 사이의 관계를 구할 수 있다.


image::./images/1-12.PNG[다중선형모델]


* 여러 속성을 사용할때 가장 중요한 문제는 관련 속성을 선택하는 것
* 다음 속성(Lot Area, Gr Liv Area)을 넣어 RMSE 값이 어떻게 개선되는지 살펴보자.

image::./images/1-13.PNG[다중선형모델]
