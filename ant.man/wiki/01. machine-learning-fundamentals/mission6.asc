## Guided Project: Predicting Car Prices
Practice the machine learning workflow using k-nearest neighbors to predict car prices.

### step.1 Introduction To The Data Set

```
import numpy as np
import pandas as pd

cars = pd.read_csv("imports-85.data")
```
### step.2 Data Cleaning
```
clearCar = cars.drop(['symboling', 'normalized_losses', 'make', 'fuel_type', 'aspiration', 'num_doors', 'body_style', 'drive_wheels', 'engine_location', 'engine_type', 'num_cylinders', 'fuel_system'], axis=1)
clearCar = clearCar.dropna(axis=0)
clearCar = clearCar.apply(pd.to_numeric, errors='coerce')

print(clearCar)
print(clearCar.isnull().sum())

normalized_listings = (clearCar - clearCar.mean())/(clearCar.std())
normalized_listings['price'] = clearCar['price']
print(normalized_listings.head(3))
```

### step.3 Univariate Model

### step.4 Multivariate Model

### step.5 Hyperparameter Tuning

### step.6

## verified
https://www.dataquest.io/verify_cert/46EEGJ6GLRC5H682SD4Y/
