== Why Learn Calculus?
 * 이전에 배운  Knn 알고리즘은
  **  알고리즘의 동작을 이해하는데 수학을 필요로 하지 않음
  **  이해하기 쉽지만 큰 데이터 세트에는 사용할 수 없다,
  ** 계산 집약적 인 기술임
 * 반면에 우리가 다음에 배울 수 있는 대부분의 기계 학습 기술에 대해 모델은 수학 함수로 표현
 * 이 수학 함수는 속성들이 타겟 속성과 어떻게 관련되어 있는지를 설명하는 기본 함수를 근사화.
 * 훈련 데이터 세트를 사용하여 수학 함수를 유도하면 테스트 또는 미래의 데이터 세트에 대한 예측을 계산하는 것은 저렴.
 * 다음 다이어그램은 데이터 집합을 근사하는 두 가지 선형 회귀 함수

image::./images/ml_math_function.png[]

 * 기계 학습을위한 선형 회귀 모델을 사용하기 전에 미적분의 핵심 아이디어를 이해해야 함.
 * 미적분은 수학 함수가 어떻게 작동하는지 이해할 수있는 프레임 워크를 제공.
   ** 다양한 지점에서 기울기를 이해하다.
   ** 함수에서 극한의 점을 찾는다.
   ** 데이터 집합을 가장 잘 나타내는 최적의 함수를 결정한다.

== Linear Function (선형함수)
 *  선형 함수는 다음과 같은 형식으로 표현 할 수 있다 : y = mx + b
    **  m 과 b는 상수
    **  x 와 y는 변수
 * m을 고정하고 b를 변화 시키면 선은 어떻게 바뀌나요?
   ** 직선의 기울기의 변화없이 y축을 따라 이동
 * b는 고정되어 있지만 m이 다를 때 줄이 어떻게 바뀌나요?
   ** y축과 직선이 만나는 점( y 절편) 을 중심으로 기울기가 변함
 * 어떤 값이 라인의 기울기를 제어합니까?
   * m의 값에 따라 기울기가 변하게 됨
 * m이 0으로 설정되면 라인은 어떻게됩니까?
   ** x축과 평행한 직선, y값은 b 로 일정 (y= b)

== Slope And Y-Intercept (기울기와 Y절편)
 * m은 직선의 기울기를 제어

image::./images/slope_screenshots.png[]
image::./images/slope_eq.PNG[]

 * b는 직선의 y-절편 (y축과 직선이 만나는 점의 y좌표값)
 * m = 0 and b = 0 이면 해당 직선은 x축을 나타냄

 * 참고
   ** x 절편 : 직선이 x축과 만나는 점의 x 좌표
    *** y = mx + b 라는 직선과 x = 0 이라는 직선(x축) 의 연립방정식의 해의 x 값
    *** y= mx + b 에서 x축의 모든점의 y좌표는 0이므로 y=0 을 직선함수에 대입하면
   0 = mx + b . 여기서 식을 x에 대해 정리하면 x = b / m
    *** m <> 0 이면 항상 x절편은 b/m
   *** m = 0 일 때 x 절편은 없거나 무한하게 많을 수 있다.
      **** m=0 이고 b = 0 일 때 직선은 x축과 일치하고 절편은 무한히 많으므로 정할 수 없음 (부정)
      **** m=0 이고 b <> 0 일 때 직선은 x축과 평행하고 존재하지 않음 (불능)
   ** y 절편 : 직선이 y축과 만나는 점의 y 좌표
    *** y = mx + b 라는 직선과 y=0 이라는 직선(y축)의 연립방적식의 해의 y 값
    *** y= mx +b 에서 y축상의 모든 점의 x 좌표는 0 이므로 x=0 을 직선함수에 대입하면 y = b
    *** y 절편 값은 항상 존재하는가? =>  NO!!!
      **** y축과 평행한 직선은 y절편이 존재하지 않음
      **** y = mx + b 형식으로는 표현이 불가 (x = 3)
   ** 좀 더 일반적인 직선의 형태는 ax + by + c = 0 의 형태임.

== Math Behind Slope
 * 한 직선상에서 모든 지점에서의 기울기는 항상 일정한 값(m)을 가진다.
 * 두 점 (x1, y1) , (x2,y2) 가 한 직선 상에 있을 때 기울기 구하기
  ** 직선의 식을 y= mx + b 라고 하고 m을 구하는 것!
  ** (x1,y1)을 직선의 식에 대입  : y1 = m*x1 + b => 식1
  ** (x2,y2)을 직선의 식에 대입  : y2 = m*x2 + b => 식2
  ** 위의 두 식의 양변을 빼면
    *** (y1- y2) =  (m*x1 + b) - (mx*x2 + b) = m*(x1-x2)
    *** m에 대하여 식을 정리하면 m = (y1-y2) / (x1 - x2)
    *** 참고
      **** 만일 x1 == x2 이면 m은 구할 수 없음 : 직선은 y축과 평행한 직선으로 x = x1으로 표현
      **** y절편인 b 값을 마저 구해보면 식1 y1 = mx1 + b 에서 b에 대하여 정리하면 b = y1 - m*x1
      **** y절편을 구할 때 식2을 사용해도 마찬가지임. y2 = mx2 + b를 b에 대해 정리하면 b = y2 - m*x2

== Nonlinear Function (비선형 함수)
  * 볼의 궤적은 y = mx + b 의 형태로 표현할 수 없음
  * 볼의 궤적은 비선형 함수이기 때문
  * 비선형함수에서 y값은 x값에 비례하지 않는다.
  * 비선형함수에서 x의 증가에 따라 y는 일정하게 증가하지 않음
    ** 각 지점마다 증가하는 정도 즉 기울기가 다르다. x값에 따라 기울기가 다르다. 기울기는 x에 대한 함수
    ** 예를 들어 y = x**2 에서 이 비선형함수를 만족하는 세 점을 A(0,0) , B( 1,1) , C(2,4)라고 하면
    ** 점A에서 점B로 x값이 0 -> 1 로 1 증가 할 때 y값은 0 -> 1로 1 증가.
    ** 점B에서 점C로 x값이 1 -> 2 로 1 증가 할 때 y값은 1 -> 4로 3 증가.
  * 관계가 비선형이라면, 우리는 2 점을 샘플링하고 그 사이의 기울기를 사용하여 예측할 수 없다.
  * 커브에서 2 점과 교차하는 선을 scant line 이라고 함.
  * 곡선에서 2 점 사이의 기울기를 계산할 때 두 지점을 교차하는 선 사이의 기울기를 계산.

== Secant Lines And Slope
 * scant line에서 두 점의 x값의 차이가 적으면 scant line는 곡선과 자연스럽게 교차하고 차이가 클수록 scant line은 곡선에서 벗어남
 * 만일 두 점의 x값 x1 == x2가 같으면 어떻게 될까?

== Tangent Line
 * 기울기를 구하는 공식에 의하면 x1==x2이면 m은 구할 수 없다. m = (y1-y2) / (x2-x1) = undefined (부정)
 * x1 = x2  인 지점에서 기울기를 계산할 수는 없지만 특정한 점에 접근 접근 할 수 있습니다.
 * 이 값은 특정 시점의 기울기를 설명하기 때문에 순간 변화율이라고합니다.
 * 선형 함수의 경우 선의 임의 지점에서 순간 변화율이 동일.
 * 비선형 함수의 경우, 순간 변화율은 특정 점에서 비선형 함수에 수직 인 선의 기울기를 나타냅니다.
 * 이 선을 tangent line (접선) 이라고 함. scant line과는 달리 한 점에서 직선과 교차한다.
 * tangent line은 scant line에서 두 점의 x좌표가 같을 때라고 할 수 있음


* 생각해 볼 것!
   ** tanent line의 기울기는 어떻게 구할까? tangent line의 기울기가 바로 특정한 점에서의 순간 변화율
   ** 극한과 미분
