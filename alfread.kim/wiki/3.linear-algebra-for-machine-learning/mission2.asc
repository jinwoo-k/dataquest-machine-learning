= Vectors

==  From Matrices To Vectors
  *  매트릭스의 각 행과 열은 숫자들의 리스트로 되어 있고 이를 벡터라고 한다.
     ** row matrix (행벡터)
     ** column matrix (열벡터)

== Geometric Intuition Of Vectors

image:./images/vector_geometry.PNG[]

  * 화살표는 벡터의 방향과 크기의 2 가지 주요 속성을 강조하기 때문에 개별 벡터를 시각화하는 데 사용.

image:./images/magnitude_direction.PNG[]

== Vector Operations
 * 벡터의 덧셈

image:./images/add_vector1.PNG[]
image:./images/add_vector.PNG[]

 * 벡터의 뺄셈

image:./images/sub_vector1.PNG[]
image:./images/sub_vector.PNG[]


== Scaling Vectors (상수배)

image:./images/scale_vector.PNG[]

== Vectors In NumPy
  * 매트리스와 마찬가지로 numpy.asarray() 사용

----
vector_one = np.asarray([
    [1],
    [2],
    [1]
], dtype=np.float32)
----

   * 덧셈(+), 뺄셈(-), 상수배(*) 기호 사용

----
vector_two = 2*vector_one + 0.5*vector_one
----

== Dot Product

image:./images/dot_product1.PNG[]

* https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html[numpy.dot()]

----
vector_dp = np.dot(vector_one[:,0], vector_two)
----

* 참고 : http://j1w2k3.tistory.com/627[벡터의 내적]

== Linear Combination
 * 스칼라 곱셈을 사용하여 벡터를 스케일링 할 수 있다면 이러한 스케일 벡터를 더하거나 빼는 것을 선형 결합이라고 함.

image:./images/linear-combination.PNG[]

== Linear Combination And Vectors
 * 우리는 이제 첨가행렬을 방금 논의한 벡터의 선형 조합에 연결할 수 있습니다.
   **  첨가행렬
image:./images/arg_matrix_exam.PNG[]

   **  선형결합
image:./images/linear-comb-exam.PNG[]

== The Matrix Equation
 * 행렬 방정식은 행렬 및 벡터만을 사용하는 선형 시스템의 표현

image:./images/matrix_equation.PNG[]
image:./images/matrix_equation1.PNG[]

* 다음 미션은
 * 행렬을 결합 할 수있는 방법을 설명하는 규칙
 * 행렬을 벡터로 곱셈하는 법
 * 가우스 제거를 사용하지 않고 솔루션 벡터 x를 계산하는 방법.
