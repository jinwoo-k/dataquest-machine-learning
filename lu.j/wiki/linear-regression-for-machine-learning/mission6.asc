= Guide Project: Predicting House Sale Prices

== 1. Introduction
* 이 코스에서는 모델 기반 학습을 위해 직관적으로 구축하고 선형회귀 모델의 작동 방식을 살펴보고 모델피팅에 대한 두가지 접근 방식이 어떻게 동작하는지 이해하고, 함수를 정리하고 변형하고 선택하는 몇가지 기술을 이해했다.
* 서로 다른 모델을 신속하게 반복할 수 있게 해주는 함수 파이프 라인을 설정해본다.

== 2. Feature Engineering
* 누락된 값이 있는 속성을 제거하기 위해 transform_features()를 업데이트
* 판매에 대한 정보가 누출된 열도 제거
* 함수의 목표는 다음과 같다.



[source,python]
----
import matplotlib.pyplot as plt
%matplotlib inline
import pandas as pd
import numpy as np
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error

data = pd.read_csv("AmesHousing.txt", delimiter="\t")
train = data[0:1460]
test = data[1460:]

def transform_features():
    return train


def select_features():
    return train[["Gr Liv Area", "SalePrice"]]

def train_and_test():
    model = KNeighborsRegressor()
    model.fit(train[["Gr Liv Area"]], train["SalePrice"])
    labels = model.predict(test[["Gr Liv Area"]])
    test["predicted_price"] = labels
    mse = mean_squared_error(test["SalePrice"], test["predicted_price"])
    rmse = mse**(1/2)
----
